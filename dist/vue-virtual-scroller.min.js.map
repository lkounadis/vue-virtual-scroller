{"version":3,"file":"vue-virtual-scroller.min.js","sources":["../src/config.js","../node_modules/vue-resize/dist/vue-resize.esm.js","../node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","../node_modules/scrollparent/scrollparent.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue","../src/index.js","../src/mixins/IdState.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  function isScrolling(node) {\n    var overflow = getComputedStyle(node, null).getPropertyValue(\"overflow\");\n\n    return overflow.indexOf(\"scroll\") > -1 || overflow.indexOf(\"auto\") > - 1;\n  }\n\n  function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return undefined;\n    }\n\n    var current = node.parentNode;\n    while (current.parentNode) {\n      if (isScrolling(current)) {\n        return current;\n      }\n\n      current = current.parentNode;\n    }\n\n    return document.scrollingElement || document.documentElement;\n  }\n\n  return scrollParent;\n}));","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n\n  listTag: {\n    type: String,\n    default: 'div',\n  },\n\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      ref=\"before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <component\n      :is=\"listTag\"\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n      :class=\"listClass\"\n    >\n      <component\n        :is=\"itemTag\"\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? {\n          transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)`,\n          width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n          height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n        } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"[\n          itemClass,\n          {\n            hover: !skipHover && hoverKey === view.nr.key\n          },\n        ]\"\n        v-on=\"skipHover ? {} : {\n          mouseenter: () => { hoverKey = view.nr.key },\n          mouseleave: () => { hoverKey = null },\n        }\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </component>\n\n      <slot\n        name=\"empty\"\n      />\n    </component>\n\n    <div\n      v-if=\"$slots.after\"\n      ref=\"after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    gridItems: {\n      type: Number,\n      default: undefined,\n    },\n\n    itemSecondarySize: {\n      type: Number,\n      default: undefined,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n\n    skipHover: {\n      type: Boolean,\n      default: false,\n    },\n\n    listTag: {\n      type: String,\n      default: 'div',\n    },\n\n    itemTag: {\n      type: String,\n      default: 'div',\n    },\n\n    listClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    itemClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n\n    gridItems () {\n      this.updateVisibleItems(true)\n    },\n\n    itemSecondarySize () {\n      this.updateVisibleItems(true)\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n\n    if (this.gridItems && !this.itemSize) {\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  activated () {\n    const lastPosition = this.$_lastUpdateScrollPosition\n    if (typeof lastPosition === 'number') {\n      this.$nextTick(() => {\n        this.scrollToPosition(lastPosition)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const gridItems = this.gridItems || 1\n      const itemSecondarySize = this.itemSecondarySize || itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n      let visibleStartIndex, visibleEndIndex\n\n      if (!count) {\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = visibleStartIndex = 0\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // account for leading slot\n        let beforeSize = 0\n        if (this.$refs.before) {\n          beforeSize = this.$refs.before.scrollHeight\n          scroll.start -= beforeSize\n        }\n\n        // account for trailing slot\n        if (this.$refs.after) {\n          const afterSize = this.$refs.after.scrollHeight\n          scroll.end += afterSize\n        }\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n\n          // search visible startIndex\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\n\n          // search visible endIndex\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize * gridItems)\n          const remainer = startIndex % gridItems\n          startIndex -= remainer\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\n          visibleEndIndex > count && (visibleEndIndex = count)\n\n          totalSize = Math.ceil(count / gridItems) * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.findIndex(\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\n              )\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          if (i === items.length - 1) this.$emit('scroll-end')\n          if (i === 0) this.$emit('scroll-start')\n\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n          view.offset = 0\n        } else {\n          view.position = Math.floor(i / gridItems) * itemSize\n          view.offset = (i % gridItems) * itemSecondarySize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      const direction = this.direction === 'vertical'\n        ? { scroll: 'scrollTop', start: 'top' }\n        : { scroll: 'scrollLeft', start: 'left' }\n\n      let viewport\n      let scrollDirection\n      let scrollDistance\n\n      if (this.pageMode) {\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        viewport = viewportEl\n        scrollDirection = direction.scroll\n        scrollDistance = position + scrollTop + scrollerPosition\n      } else {\n        viewport = this.$el\n        scrollDirection = direction.scroll\n        scrollDistance = position\n      }\n\n      viewport[scrollDirection] = scrollDistance\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    :key-field=\"keyField\"\n    :list-tag=\"listTag\"\n    :item-tag=\"itemTag\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n    <template slot=\"empty\">\n      <slot name=\"empty\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  inheritAttrs: false,\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n\n    itemsWithSize (next, prev) {\n      const scrollTop = this.$el.scrollTop\n\n      // Calculate total diff between prev and next sizes\n      // over current scroll top. Then add it to scrollTop to\n      // avoid jumping the contents that the user is seeing.\n      let prevActiveTop = 0; let activeTop = 0\n      const length = Math.min(next.length, prev.length)\n      for (let i = 0; i < length; i++) {\n        if (prevActiveTop >= scrollTop) {\n          break\n        }\n        prevActiveTop += prev[i].size || this.minItemSize\n        activeTop += next[i].size || this.minItemSize\n      }\n      const offset = activeTop - prevActiveTop\n\n      if (offset === 0) {\n        return\n      }\n\n      this.$el.scrollTop += offset\n    },\n  },\n\n  beforeCreate () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      if (this.vscrollData.simpleArray) return this.index\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = Math.round(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n","import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n"],"names":["config","itemsLimit","isIE","initCompat","init","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","getInternetExplorerVersion","ResizeObserver","render","_h","this","$createElement","_self","_c","staticClass","attrs","tabindex","staticRenderFns","_scopeId","name","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","_this","$nextTick","object","document","createElement","setAttribute","type","appendChild","data","beforeDestroy","plugin","version","install","Vue","component","GlobalVue","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","global","use","VisibilityState","el","options","vnode","instance","Constructor","_classCallCheck","observer","frozen","createObserver","protoProps","staticProps","value","destroyObserver","callback","result","entry","once","throttle","_leading","throttleOptions","leading","delay","timeout","lastState","currentArgs","arguments","undefined","throttled","state","_len","args","_key","apply","concat","clearTimeout","setTimeout","_clear","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","unbind","ObserveVisibility","update","_ref3","deepEqual","val1","val2","oldValue","directive","root","factory","isScrolling","node","overflow","getComputedStyle","getPropertyValue","HTMLElement","SVGElement","current","parentNode","scrollingElement","documentElement","module","exports","Scrollparent","items","required","keyField","String","default","direction","validator","includes","listTag","itemTag","simpleArray","supportsPassive","opts","uid","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","_compiled","functional","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","__vue_script__","components","directives","itemSize","Number","gridItems","itemSecondarySize","minItemSize","sizeField","typeField","buffer","pageMode","Boolean","prerender","emitUpdate","skipHover","listClass","itemClass","pool","totalSize","ready","hoverKey","computed","sizes","-1","accumulator","field","computedMinSize","l","size","$_computedMinItemSize","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","error","activated","lastPosition","scrollToPosition","removeListeners","addView","index","item","view","position","nonReactive","id","used","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","handleScroll","event","requestAnimationFrame","continuous","$_refreshTimout","handleVisibilityChange","isVisible","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","visibleStartIndex","visibleEndIndex","Math","min","scroll","getScroll","positionDiff","start","end","beforeSize","$refs","before","scrollHeight","after","afterSize","oldI","a","b","ceil","max","floor","itemsLimitError","$_continuous","clear","findIndex","unusedIndex","v","Error","pop","offset","$_sortTimer","sortViews","getListenerTarget","ScrollParent","body","isVertical","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","scrollToItem","viewport","scrollDirection","scrollDistance","viewportEl","tagName","scrollerPosition","log","sort","viewA","viewB","RecycleScroller","inheritAttrs","provide","$_resizeObserver","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","vscrollResizeObserver","active","validSizes","itemsWithSize","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","next","prev","prevActiveTop","activeTop","$_updates","$_undefinedSizes","deactivated","onScrollerResize","scroller","onScrollerVisible","force","getItemSize","scrollToBottom","$_scrollingToBottom","cb","inject","watchData","sizeDependencies","emitResize","tag","hasOwnProperty","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","applySize","round","$set","onResize","unobserve","$slots","VERSION","finalOptions","assign","installComponents","componentsPrefix","prefix","DynamicScroller","DynamicScrollerItem","registerComponents","idProp","vm","store","idState","$_id","$_getId","$_updateIdState","beforeUpdate","$_idStateInit"],"mappings":"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"}